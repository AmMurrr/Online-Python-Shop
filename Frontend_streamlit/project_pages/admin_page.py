import streamlit as st 
import repositories.sales
from repositories.products import get_product_name,get_goods_log,delete_logs
from repositories.account import get_user_info,user_purge


import logging
import log_config

def get_all_sales_info():
    logging.info("–ó–∞–ø—Ä–æ—Å –Ω–∞ –≤—Å–µ –ø–æ–∫—É–ø–∫–∏")
    return repositories.sales.get_all_sales()

def get_login(user_id):
    logging.info(f"–ü–æ–ª—É—á–∞–µ–º –ª–æ–≥–∏–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}")
    user_info = get_user_info(user_id)
    return user_info["login"]

def get_name(product_id):
    logging.info(f"–ü–æ–ª—É—á–∞–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞ {product_id}")
    return get_product_name(product_id)

def user_purge():
    admin_id = st.session_state.logged_in
    logging.info(f"–£–¥–∞–ª–µ–Ω–∏–µ –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, –∫—Ä–æ–º–µ {admin_id}")
    user_purge(admin_id)
    st.rerun()

def sale_clear():
    repositories.sales.clear_sales()

def show_admin_page():
    st.title(f"–ü–∞–Ω–µ–ª—å –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ ID {st.session_state.logged_in}")
    all_sales_info = get_all_sales_info()
    all_sales_worth = 0

    if not all_sales_info:
        logging.info("–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø—Ä–æ–¥–∞–∂–∞—Ö –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
        st.warning("–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø—Ä–æ–¥–∞–∂–∞—Ö –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")

    if st.button("–û—á–∏—Å—Ç–∏—Ç—å –∏—Å—Ç–æ—Ä–∏—é –ø—Ä–æ–¥–∞–∂"):
        logging.info("–û—á–∏—Å—Ç–∫–∞ –∏—Å—Ç–æ—Ä–∏–∏ –ø—Ä–æ–¥–∞–∂")
        sale_clear()
        st.rerun()

    if st.button("# üíÄ –£–¥–∞–ª–∏—Ç—å –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π"):
        user_purge()

    option = st.selectbox("–°–µ–π—á–∞—Å –≤—ã–±—Ä–∞–Ω–æ", ["–í—Å–µ –ø—Ä–æ–¥–∞–∂–∏", "–õ–æ–≥–∏ —Ç–æ–≤–∞—Ä–æ–≤"])

    if option == "–í—Å–µ –ø—Ä–æ–¥–∞–∂–∏":
        logging.info(f"–í—ã–±—Ä–∞–Ω–∞ –æ–ø—Ü–∏—è {option} –≤ –ü–∞–Ω–µ–ª–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞")
        for sale in all_sales_info:
            with st.container(border=True):
                cols = st.columns([1,1,1])

                sale_id = sale["sale_id"]
                sale_user_id = sale["user_id"]
                sale_date = sale["sale_date"]
                sale_cost = sale["total_cost"]
                sale_products = sale["sale_details"]

                all_sales_worth += sale_cost

                with cols[0]:
                    st.subheader(f"–ü–æ–∫—É–ø–∫–∞ ‚Ññ{sale_id}")
                    if sale_user_id is not None:
                        user_login = get_login(sale_user_id)
                        st.write(f"–°–æ–≤–µ—Ä—à–µ–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º {user_login}")
                        st.write(f"{sale_date}")
                    else:
                        st.write("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–¥–∞–ª—ë–Ω")
                        st.write(f"{sale_date}")
                
                with cols[1]:
                    st.subheader("–ö—É–ø–ª–µ–Ω–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã:")
                    for product in sale_products:
                        if product["product_id"] is not None:
                            product_name = get_name(product["product_id"])
                            amount = product["amount"]
                            st.write(f"### {product_name} –≤ –∫–æ–ª–∏—á–µ—Å—Ç–≤–µ  {amount}")
                        else:
                            st.write("### –¢–æ–≤–∞—Ä –±—ã–ª —É–¥–∞–ª–µ–Ω")
                with cols[2]:
                    st.subheader("–°—É–º–º–∞ –ø—Ä–æ–¥–∞–∂–∏:")
                    st.write(f"### {sale_cost} ‚ÇΩ")

        st.write(f"#### –°—É–º–º–∞ –ø—Ä–æ–¥–∞–∂: {all_sales_worth} ‚ÇΩ")

    if option == "–õ–æ–≥–∏ —Ç–æ–≤–∞—Ä–æ–≤":
        logging.info(f"–í—ã–±—Ä–∞–Ω–∞ –æ–ø—Ü–∏—è {option} –≤ –ü–∞–Ω–µ–ª–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞")

        if st.button("–û—á–∏—Å—Ç–∏—Ç—å –ª–æ–≥–∏"):
            logging.info("–ß–∏—Å—Ç–∏–º –õ–æ–≥–∏ —Ç–æ–≤–∞—Ä–æ–≤")
            delete_logs()
        
        goods_logs = get_goods_log()
        if not goods_logs:
            logging.warning("–õ–æ–≥–æ–≤ —Ç–æ–≤–∞—Ä–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ")
            st.write("–õ–æ–≥–æ–≤ –Ω–µ—Ç")

        for log in goods_logs:
            log_id = log["log_id"]
            product_id = log["product_id"]
            action = log["action"]
            log_time = log["log_time"]

            cols = st.columns([1,1,1])
            with cols[0]:
                st.subheader(f"ID {log_id}")
                st.write(f"{log_time}")
            with cols[1]:
                st.write(f" ### ID —Ç–æ–≤–∞—Ä–∞ \n  ## {product_id}")
            with cols[2]:
                st.write(f"### {action}")
            

            st.markdown("---")